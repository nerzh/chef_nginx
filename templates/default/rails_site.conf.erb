upstream <%= @props['name'] %> {
  server unix://<%= @props['socket_path'] %>;
}

<% if @props['ssl_exist'] -%>
server {
  listen 80;
  server_name <%= @props['name'] %> www.<%= @props['name'] %>;
  return 301 https://$host$request_uri;
}
<% end -%>

server {
  <%= @props['ssl_exist'] ? node['chef_nginx']['template']['ssl_listen'] : node['chef_nginx']['template']['http_listen'] %>
  server_name www.<%= @props['name'] %>;
  <%= node['chef_nginx']['template']['ssl_hsts'] if @props['ssl_exist'] %>
  <%= @props['crt'] if @props['ssl_exist'] %>
  <%= @props['key'] if @props['ssl_exist'] %>
<%= node['chef_nginx']['template']['ssl_props'] if @props['ssl_exist'] %>
  return 301 $scheme://<%= @props['name'] %>$request_uri;
}

server {
  <%= @props['ssl_exist'] ? node['chef_nginx']['template']['ssl_listen'] : node['chef_nginx']['template']['http_listen'] %>
  server_name <%= @props['name'] %>;
  root <%= @props['static_path'] %>;
  <%= node['chef_nginx']['template']['ssl_hsts'] if @props['ssl_exist'] %>
  
  access_log  /var/log/nginx/<%= @props['name'] %>-access.log;
  error_log /var/log/nginx/<%= @props['name'] %>-error.log;

  <%= @props['crt'] if @props['ssl_exist'] %>
  <%= @props['key'] if @props['ssl_exist'] %>

<%= node['chef_nginx']['template']['ssl_props'] if @props['ssl_exist'] %>

<%= node['chef_nginx']['template']['adminer'] if @props['add_adminer'] %>
  
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }
  try_files $uri/index.html $uri @<%= @props['name'] %>;

  location @<%= @props['name'] %> {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_redirect off;
    proxy_pass http://<%= @props['name'] %>;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 100M;
  keepalive_timeout 10;
}
